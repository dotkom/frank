{"ast":null,"code":"var _jsxFileName = \"/home/monmon/Documents/Github/frank/src/components/List.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Circle from \"./Circle\";\nimport writeUserData from \"./Firebase\";\n\nfunction List() {\n  const [rfid, setRfid] = useState(\"0260434848\");\n  const [peopleInside, setPeopleInside] = useState([]);\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n  const hour = today.getHours();\n  const min = today.getMinutes();\n  const sec = today.getSeconds();\n  useEffect(() => {\n    fetch(`https://online.ntnu.no/api/v1/users/?rfid=${rfid}`).then(res => res.json()).then(res => setPeopleInside(peopleInside => [...peopleInside, res.results[0]]));\n    fetch(`https://online.ntnu.no/api/v1/users/?rfid=0317066520`).then(res => res.json()).then(res => {\n      setPeopleInside(peopleInside => [...peopleInside, res.results[0]]);\n      console.log(peopleInside);\n      writeUserData(`${day}-${month}-${year}`, `${hour}:${min}:${sec}`, res.results[0].id, res.results[0].first_name, res.results[0].last_name);\n    });\n  }, [rfid]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, peopleInside.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Circle, {\n    props: peopleInside.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })) : null, peopleInside.map((index, person) => /*#__PURE__*/React.createElement(\"div\", {\n    key: person + index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, peopleInside[person].first_name, \" \", peopleInside[person].last_name)));\n}\n\nexport default List;","map":{"version":3,"sources":["/home/monmon/Documents/Github/frank/src/components/List.js"],"names":["React","useState","useEffect","Circle","writeUserData","List","rfid","setRfid","peopleInside","setPeopleInside","today","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","min","getMinutes","sec","getSeconds","fetch","then","res","json","results","console","log","id","first_name","last_name","length","map","index","person"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,YAA1B;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,YAAD,CAAhC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMS,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,IAAI,GAAGF,KAAK,CAACG,WAAN,EAAb;AACA,QAAMC,KAAK,GAAGJ,KAAK,CAACK,QAAN,KAAmB,CAAjC;AACA,QAAMC,GAAG,GAAGN,KAAK,CAACO,OAAN,EAAZ;AACA,QAAMC,IAAI,GAAGR,KAAK,CAACS,QAAN,EAAb;AACA,QAAMC,GAAG,GAAGV,KAAK,CAACW,UAAN,EAAZ;AACA,QAAMC,GAAG,GAAGZ,KAAK,CAACa,UAAN,EAAZ;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,KAAK,CAAE,6CAA4ClB,IAAK,EAAnD,CAAL,CACGmB,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IACJjB,eAAe,CAAED,YAAD,IAAkB,CAAC,GAAGA,YAAJ,EAAkBkB,GAAG,CAACE,OAAJ,CAAY,CAAZ,CAAlB,CAAnB,CAHnB;AAKAJ,IAAAA,KAAK,CAAE,sDAAF,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbjB,MAAAA,eAAe,CAAED,YAAD,IAAkB,CAAC,GAAGA,YAAJ,EAAkBkB,GAAG,CAACE,OAAJ,CAAY,CAAZ,CAAlB,CAAnB,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYtB,YAAZ;AACAJ,MAAAA,aAAa,CACV,GAAEY,GAAI,IAAGF,KAAM,IAAGF,IAAK,EADb,EAEV,GAAEM,IAAK,IAAGE,GAAI,IAAGE,GAAI,EAFX,EAGXI,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeG,EAHJ,EAIXL,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeI,UAJJ,EAKXN,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeK,SALJ,CAAb;AAOD,KAZH;AAaD,GAnBQ,EAmBN,CAAC3B,IAAD,CAnBM,CAAT;AAqBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAAC0B,MAAb,GAAsB,CAAtB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE1B,YAAY,CAAC0B,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAIG,IALN,EAMG1B,YAAY,CAAC2B,GAAb,CAAiB,CAACC,KAAD,EAAQC,MAAR,kBAChB;AAAK,IAAA,GAAG,EAAEA,MAAM,GAAGD,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5B,YAAY,CAAC6B,MAAD,CAAZ,CAAqBL,UADxB,OACqCxB,YAAY,CAAC6B,MAAD,CAAZ,CAAqBJ,SAD1D,CADD,CANH,CADF;AAcD;;AAED,eAAe5B,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Circle from \"./Circle\";\nimport writeUserData from \"./Firebase\";\n\nfunction List() {\n  const [rfid, setRfid] = useState(\"0260434848\");\n  const [peopleInside, setPeopleInside] = useState([]);\n\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n  const hour = today.getHours();\n  const min = today.getMinutes();\n  const sec = today.getSeconds();\n\n  useEffect(() => {\n    fetch(`https://online.ntnu.no/api/v1/users/?rfid=${rfid}`)\n      .then((res) => res.json())\n      .then((res) =>\n        setPeopleInside((peopleInside) => [...peopleInside, res.results[0]])\n      );\n    fetch(`https://online.ntnu.no/api/v1/users/?rfid=0317066520`)\n      .then((res) => res.json())\n      .then((res) => {\n        setPeopleInside((peopleInside) => [...peopleInside, res.results[0]]);\n        console.log(peopleInside);\n        writeUserData(\n          `${day}-${month}-${year}`,\n          `${hour}:${min}:${sec}`,\n          res.results[0].id,\n          res.results[0].first_name,\n          res.results[0].last_name\n        );\n      });\n  }, [rfid]);\n\n  return (\n    <div>\n      {peopleInside.length > 0 ? (\n        <div>\n          <Circle props={peopleInside.length} />\n        </div>\n      ) : null}\n      {peopleInside.map((index, person) => (\n        <div key={person + index}>\n          {peopleInside[person].first_name} {peopleInside[person].last_name}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}