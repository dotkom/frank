{"ast":null,"code":"var _jsxFileName = \"/home/monmon/Documents/Github/frank/src/components/List.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Circle from \"./Circle\";\nimport writeUserData from \"./Firebase\";\n\nfunction List() {\n  const [rfid, setRfid] = useState(\"0260434848\");\n  const [peopleInside, setPeopleInside] = useState([]);\n  const [person, setPerson] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    phonenumber: \"\",\n    email: \"\"\n  });\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n  const hour = today.getHours();\n  const min = today.getMinutes();\n  const sec = today.getSeconds();\n  useEffect(() => {\n    fetch(`https://online.ntnu.no/api/v1/users/?rfid=${rfid}`).then(res => res.json()).then(res => setPeopleInside(peopleInside => [...peopleInside, res.results[0]]));\n    fetch(`https://online.ntnu.no/api/v1/users/?rfid=0317066520`).then(res => res.json()).then(res => {\n      setPeopleInside(peopleInside => [...peopleInside, res.results[0]]);\n      writeUserData(`${day}-${month}-${year}`, `${hour}:${min}:${sec}`, res.results[0].id, res.results[0].first_name, res.results[0].last_name);\n    });\n  }, [rfid]);\n\n  const updatePerson = e => {\n    setPerson({ ...person,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, peopleInside.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Circle, {\n    props: peopleInside.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })) : null, peopleInside.map((index, person) => /*#__PURE__*/React.createElement(\"div\", {\n    key: person + index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, peopleInside[person].first_name, \" \", peopleInside[person].last_name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Navn\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: updatePerson,\n    name: \"first_name\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Etternavn\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: updatePerson,\n    name: \"last_name\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Telefonnummer\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: updatePerson,\n    name: \"phonenumber\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"E-post\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: updatePerson,\n    name: \"email\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"arrow-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default List;","map":{"version":3,"sources":["/home/monmon/Documents/Github/frank/src/components/List.js"],"names":["React","useState","useEffect","Circle","writeUserData","List","rfid","setRfid","peopleInside","setPeopleInside","person","setPerson","first_name","last_name","phonenumber","email","today","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","min","getMinutes","sec","getSeconds","fetch","then","res","json","results","id","updatePerson","e","target","name","value","length","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Circle from \"./Circle\";\nimport writeUserData from \"./Firebase\";\n\nfunction List() {\n  const [rfid, setRfid] = useState(\"0260434848\");\n  const [peopleInside, setPeopleInside] = useState([]);\n  const [person, setPerson] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    phonenumber: \"\",\n    email: \"\",\n  });\n\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n  const hour = today.getHours();\n  const min = today.getMinutes();\n  const sec = today.getSeconds();\n\n  useEffect(() => {\n    fetch(`https://online.ntnu.no/api/v1/users/?rfid=${rfid}`)\n      .then((res) => res.json())\n      .then((res) =>\n        setPeopleInside((peopleInside) => [...peopleInside, res.results[0]])\n      );\n    fetch(`https://online.ntnu.no/api/v1/users/?rfid=0317066520`)\n      .then((res) => res.json())\n      .then((res) => {\n        setPeopleInside((peopleInside) => [...peopleInside, res.results[0]]);\n        writeUserData(\n          `${day}-${month}-${year}`,\n          `${hour}:${min}:${sec}`,\n          res.results[0].id,\n          res.results[0].first_name,\n          res.results[0].last_name\n        );\n      });\n  }, [rfid]);\n\n  const updatePerson = (e) => {\n    setPerson({ ...person, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div>\n      {peopleInside.length > 0 ? (\n        <div>\n          <Circle props={peopleInside.length} />\n        </div>\n      ) : null}\n      {peopleInside.map((index, person) => (\n        <div key={person + index}>\n          {peopleInside[person].first_name} {peopleInside[person].last_name}\n        </div>\n      ))}\n      <div>\n        {/*husk Ã¥ ta knappen*/}\n        <form>\n          <label>Navn</label>\n          <input onChange={updatePerson} name=\"first_name\" type=\"text\"></input>\n          <label>Etternavn</label>\n          <input onChange={updatePerson} name=\"last_name\" type=\"text\"></input>\n          <label>Telefonnummer</label>\n          <input\n            onChange={updatePerson}\n            name=\"phonenumber\"\n            type=\"number\"\n          ></input>\n          <label>E-post</label>\n          <input onChange={updatePerson} name=\"email\" type=\"email\"></input>\n        </form>\n        <div class=\"arrow-right\"/>\n      </div>\n    </div>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}